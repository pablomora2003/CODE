// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIREC.Data;

#nullable disable

namespace SIREC.Migrations
{
    [DbContext(typeof(SirecDbContext))]
    partial class SirecDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SIREC.Models.Cita", b =>
                {
                    b.Property<int>("IDCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCita"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int>("IDConsultorio")
                        .HasColumnType("int");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCita");

                    b.HasIndex("IDConsultorio");

                    b.HasIndex("IDUsuario");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("SIREC.Models.Consultorio", b =>
                {
                    b.Property<int>("IDConsultorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDConsultorio"));

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDConsultorio");

                    b.ToTable("Consultorios");
                });

            modelBuilder.Entity("SIREC.Models.MedicoConsultorio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDConsultorio")
                        .HasColumnType("int");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDConsultorio");

                    b.HasIndex("IDUsuario");

                    b.ToTable("MedicoConsultorios");
                });

            modelBuilder.Entity("SIREC.Models.Rol", b =>
                {
                    b.Property<int>("IDRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SIREC.Models.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SIREC.Models.UsuarioRol", b =>
                {
                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IDRol")
                        .HasColumnType("int");

                    b.HasKey("IDUsuario", "IDRol");

                    b.HasIndex("IDRol");

                    b.ToTable("UsuarioRoles");
                });

            modelBuilder.Entity("SIREC.Models.Cita", b =>
                {
                    b.HasOne("SIREC.Models.Consultorio", "Consultorio")
                        .WithMany("Citas")
                        .HasForeignKey("IDConsultorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIREC.Models.Usuario", "Usuario")
                        .WithMany("Citas")
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultorio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SIREC.Models.MedicoConsultorio", b =>
                {
                    b.HasOne("SIREC.Models.Consultorio", "Consultorio")
                        .WithMany()
                        .HasForeignKey("IDConsultorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIREC.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultorio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SIREC.Models.UsuarioRol", b =>
                {
                    b.HasOne("SIREC.Models.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IDRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIREC.Models.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SIREC.Models.Consultorio", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("SIREC.Models.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("SIREC.Models.Usuario", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
